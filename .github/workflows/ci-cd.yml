name: CI/CD Pipeline for PollVote

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN}}

      - name: Build and Push Docker image
        run: |
          docker build -t viethd4a1/pollvoteapp:latest .
          docker push viethd4a1/pollvoteapp:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          # SỬA LỖI: 'script' và toàn bộ nội dung của nó phải được thụt vào trong khối 'with'
          script: |
            # === 1. DEBUGGING: CHECK CONTEXT ===
            echo "--- Starting deployment script with sudo ---"
            echo "Current user: $(whoami)"
            
            # === 2. CREATE DIRECTORY AND NAVIGATE ===
            export APP_DIR="/home/ubuntu/PollVoteApp"
            echo "Working directory is set to: $APP_DIR"
            mkdir -p $APP_DIR
            cd $APP_DIR
            echo "Current directory is now: $(pwd)"

            # === 3. CREATE CONFIG FILES FROM SECRETS ===
            echo "--- Creating .env file ---"
            cat <<EOF > .env
            PORT=${{ secrets.PORT }}
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            EOF

            echo "--- Creating docker-compose.yml file ---"
            # SỬA LỖI: Sử dụng 'cat <<EOF' để ghi file YAML một cách an toàn
            cat <<EOF > docker-compose.yml
            ${{ secrets.DOCKER_COMPOSE_CONTENT }}
            EOF
            
            # === 4. RUN THE APPLICATION WITH SUDO ===
            echo "--- Running application with Docker Compose (using sudo) ---"
            # SỬA LỖI: Thêm cờ '--env-file ./.env' để chỉ định rõ file cấu hình
            sudo docker compose --env-file ./.env down --remove-orphans || true
            sudo docker compose --env-file ./.env pull
            sudo docker compose --env-file ./.env up -d

            # === 5. FINAL VERIFICATION STEP ===
            echo "--- Verifying running containers (waiting 5 seconds) ---"
            sleep 5
            sudo docker ps
            
            # Kiểm tra xem có ít nhất 2 container đang chạy không. Nếu không, làm cho workflow thất bại.
            if [ $(sudo docker ps -q | wc -l) -lt 2 ]; then
              echo "🔴🔴🔴 DEPLOYMENT FAILED: Containers are not running."
              echo "--- Displaying logs for myapp container for debugging: ---"
              sudo docker logs pollvoteapp-container || echo "Could not retrieve logs for myapp."
              exit 1
            fi

            echo "✅✅✅ DEPLOYMENT SUCCESSFUL: Containers are up and running."
            
            # === 6. CLEANUP ===
            echo "--- Pruning Docker images ---"
            sudo docker image prune -af

      - name: Send notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Pipeline completed successfully!"
            echo "✅ Deployment ready for PollVote"
          else
            echo "❌ Pipeline failed!"
            echo "❌ Please check the logs for issues"
          fi

      - name: Generate deployment report
        if: success()
        run: |
          echo "Deployment Report" > deployment-report.txt
          echo "===================" >> deployment-report.txt
          echo "Date: $(date)" >> deployment-report.txt
          echo "Branch: ${{ github.ref_name }}" >> deployment-report.txt
          echo "Commit: ${{ github.sha }}" >> deployment-report.txt
          echo "Author: ${{ github.actor }}" >> deployment-report.txt
          echo "Status: SUCCESS" >> deployment-report.txt
          echo "" >> deployment-report.txt
          echo "Image pushed to Docker Hub: viethd4a1/pollvoteapp:latest" >> deployment-report.txt
          echo "Deployed to EC2 successfully" >> deployment-report.txt